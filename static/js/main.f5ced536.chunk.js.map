{"version":3,"sources":["SeasonDisplay.js","Spinner.js","ErrorMsg.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","ErrorMsg","center","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAGMA,EAAe,CACjBC,OAAQ,CACJC,KAAM,uBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,oBACNC,SAAU,cA0BHE,EAbO,SAACC,GACnB,IAVeC,EAAKC,EAUdC,GAVSF,EAUUD,EAAMC,KAVXC,GAUgB,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAOhC,EAA2BP,EAAaS,GAAhCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACd,OACI,sBAAKS,UAAS,yBAAoBH,GAAlC,UACI,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eC5BlBU,EAAU,SAACP,GAEb,OACI,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACKN,EAAMQ,aAOvBD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCJAG,EAXE,SAACV,GAEd,OACI,qCACA,mBAAGM,UAAU,2BACb,uBACA,6BAAI,qBAAKK,OAAO,OAAZ,SAAqBX,EAAMQ,gBCHjCI,E,4MACFC,MAAQ,CAAEZ,IAAK,KAAMa,aAAc,I,uDAEnC,WAAoB,IAAD,OACfC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEnB,IAAKkB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIf,e,2BAIjD,WAEI,OAAIgB,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMZ,IAChC,cAAC,EAAD,CAAUO,QAAQ,yCAGxBgB,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMZ,IAChC,cAAC,EAAD,CAAeA,IAAKuB,KAAKX,MAAMZ,MAGnC,cAAC,EAAD,CAASO,QAAQ,qC,oBAG5B,WACI,OACI,qBAAKF,UAAU,aAAf,SACKkB,KAAKC,sB,GA1BJC,IAAMC,WAgCxBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.f5ced536.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n    summer: {\n        text: 'Let\\'s hit the beach!',\n        iconName: 'sun'\n    },\n    winter: {\n        text: 'Burr, it is cold!',\n        iconName: 'snowflake'\n    }\n}\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n}\n\n\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, iconName } = seasonConfig[season]\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`} />\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`} />\n        </div>\n        \n    );\n};\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props) => {\n\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">\n                {props.message}\n            </div>\n\n        </div>\n    );\n};\n\nSpinner.defaultProps = {\n    message: 'Loading...'\n};\n\nexport default Spinner;","import React from 'react';\n\n\nconst ErrorMsg = (props) => {\n\n    return (\n        <>\n        <i className=\"massive eye slash icon\"></i>\n        <br />\n        <h1><div center='true' >{props.message}</div></h1>\n        </>\n    );\n};\n\nexport default ErrorMsg;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nimport ErrorMsg from './ErrorMsg';\n\nclass App extends React.Component {\n    state = { lat: null, errorMessage: '' };\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude }),\n            err => this.setState({ errorMessage: err.message })\n        );\n    }\n\n    renderContent() {\n\n        if (this.state.errorMessage && !this.state.lat) {\n            return <ErrorMsg message=\"You didn't allow to access location\" />\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            return <SeasonDisplay lat={this.state.lat} />\n        }\n\n        return <Spinner message=\"Please accept location request\" />;\n    }\n\n    render() {\n        return (\n            <div className=\"border red\" >\n                {this.renderContent()}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}